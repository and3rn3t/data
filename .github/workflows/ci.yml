name: CI/CD Pipeline

on:
    push:
        branches: [main, develop]
    pull_request:
        branches: [main]

jobs:
    test:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                python-version: [3.8, 3.9, "3.10", "3.11"]

        steps:
            - uses: actions/checkout@v3

            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v6
              with:
                  python-version: ${{ matrix.python-version }}

            - name: Cache pip dependencies
              uses: actions/cache@v3
              with:
                  path: ~/.cache/pip
                  key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
                  restore-keys: |
                      ${{ runner.os }}-pip-

            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install -r requirements.txt
                  pip install black isort flake8 mypy pytest pytest-cov

            - name: Generate sample data
              run: python data/generate_datasets.py

            - name: Code formatting check (Black)
              run: black --check --line-length=88 .

            - name: Import sorting check (isort)
              run: isort --check-only --profile=black .

            - name: Lint with flake8
              run: flake8 sandbox/ main.py config.py --max-line-length=88

            - name: Type check with mypy
              run: mypy sandbox/ --ignore-missing-imports

            - name: Test with pytest
              run: |
                  pytest tests/ -v --cov=sandbox --cov-report=xml --cov-report=html

            - name: Upload coverage to Codecov
              uses: codecov/codecov-action@v3
              with:
                  file: ./coverage.xml
                  flags: unittests
                  name: codecov-umbrella
