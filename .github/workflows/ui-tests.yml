name: UI Tests

on:
    push:
        branches: [main, develop]
    pull_request:
        branches: [main, develop]
    schedule:
        # Run UI tests daily at 2 AM UTC
        - cron: "0 2 * * *"

jobs:
    ui-tests:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                python-version: [3.9, 3.10, 3.11]
                browser: [chromium, firefox]

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v4
              with:
                  python-version: ${{ matrix.python-version }}

            - name: Cache pip packages
              uses: actions/cache@v3
              with:
                  path: ~/.cache/pip
                  key: ${{ runner.os }}-pip-${{ hashFiles('requirements-dev.txt') }}
                  restore-keys: |
                      ${{ runner.os }}-pip-

            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install -r requirements.txt
                  pip install -r requirements-dev.txt

            - name: Install Playwright browsers
              run: |
                  playwright install ${{ matrix.browser }}
                  playwright install-deps

            - name: Check UI test environment
              run: |
                  python tests/ui/test_runner.py --check

            - name: Run UI smoke tests
              run: |
                  python tests/ui/test_runner.py --smoke
              continue-on-error: true

            - name: Start Streamlit app for testing
              run: |
                  nohup python -m streamlit run streamlit_app.py --server.port 8502 --server.headless true &
                  sleep 10

            - name: Wait for app to be ready
              run: |
                  timeout 60 bash -c 'until curl -f http://localhost:8502/healthz; do sleep 2; done'
              continue-on-error: true

            - name: Run full UI test suite
              run: |
                  python tests/ui/test_runner.py --full
              env:
                  PYTEST_BROWSER: ${{ matrix.browser }}
              continue-on-error: true

            - name: Generate test report
              if: always()
              run: |
                  python tests/ui/test_runner.py --report

            - name: Upload test results
              if: always()
              uses: actions/upload-artifact@v3
              with:
                  name: ui-test-results-${{ matrix.python-version }}-${{ matrix.browser }}
                  path: |
                      tests/ui/reports/
                      tests/ui/screenshots/
                  retention-days: 30

            - name: Upload test report to GitHub Pages
              if: github.ref == 'refs/heads/main' && matrix.python-version == '3.11' && matrix.browser == 'chromium'
              uses: peaceiris/actions-gh-pages@v3
              with:
                  github_token: ${{ secrets.GITHUB_TOKEN }}
                  publish_dir: tests/ui/reports
                  destination_dir: ui-test-reports

    accessibility-tests:
        runs-on: ubuntu-latest
        needs: ui-tests

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "18"

            - name: Install axe-core CLI
              run: npm install -g @axe-core/cli

            - name: Set up Python
              uses: actions/setup-python@v4
              with:
                  python-version: "3.13"

            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install -r requirements.txt
                  pip install -r requirements-dev.txt

            - name: Start Streamlit app
              run: |
                  nohup python -m streamlit run streamlit_app.py --server.port 8503 --server.headless true &
                  sleep 15

            - name: Wait for app to be ready
              run: |
                  timeout 60 bash -c 'until curl -f http://localhost:8503/; do sleep 2; done'

            - name: Run accessibility tests
              run: |
                  axe http://localhost:8503 --output accessibility-report.json
              continue-on-error: true

            - name: Upload accessibility report
              if: always()
              uses: actions/upload-artifact@v3
              with:
                  name: accessibility-report
                  path: accessibility-report.json
                  retention-days: 30

    performance-tests:
        runs-on: ubuntu-latest
        needs: ui-tests

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Python
              uses: actions/setup-python@v4
              with:
                  python-version: "3.13"

            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install -r requirements.txt
                  pip install -r requirements-dev.txt
                  pip install lighthouse

            - name: Install Playwright
              run: |
                  playwright install chromium

            - name: Start Streamlit app
              run: |
                  nohup python -m streamlit run streamlit_app.py --server.port 8504 --server.headless true &
                  sleep 15

            - name: Wait for app to be ready
              run: |
                  timeout 60 bash -c 'until curl -f http://localhost:8504/; do sleep 2; done'

            - name: Run Lighthouse performance audit
              run: |
                  lighthouse http://localhost:8504 --output json --output html --output-path ./lighthouse-report
              continue-on-error: true

            - name: Upload performance report
              if: always()
              uses: actions/upload-artifact@v3
              with:
                  name: performance-report
                  path: |
                      lighthouse-report.*
                  retention-days: 30
